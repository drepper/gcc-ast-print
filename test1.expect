function=f1 in test1.cc:1
[['parm_decl', 'int32', 'a'], 'ge_expr', ['integer_cst', '10']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'minus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'plus_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '10'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
function=f2 in test1.cc:11
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', ['parm_decl', 'double64', 'g']]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['parm_decl', 'int32', 'a']]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['integer_cst', '0']]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['integer_cst', '0']]
[['parm_decl', 'int32', 'a'], 'lt_expr', ['integer_cst', '0']]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '-1']]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '-1']]
[['parm_decl', 'int32', 'a'], 'cond_expr', ['integer_cst', '-1']]
[['integer_cst', '0'], 'cond_expr', ['integer_cst', '-1']]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '1']]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '1']]
[['parm_decl', 'int32', 'a'], 'cond_expr', ['integer_cst', '1']]
[['integer_cst', '0'], 'cond_expr', ['integer_cst', '1']]
[['integer_cst', '-1'], 'cond_expr', ['integer_cst', '1']]
[['parm_decl', 'double64', 'g'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[['parm_decl', 'double64', 'g'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[['integer_cst', '0'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[['integer_cst', '-1'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
function=fak in test1.cc:19
[['parm_decl', 'unsigned32', 'n'], 'le_expr', ['integer_cst', '1']]
[['parm_decl', 'unsigned32', 'n'], 'if_stmt', 'return_expr', ['integer_cst', '1']]
[['integer_cst', '1'], 'if_stmt', 'return_expr', ['integer_cst', '1']]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[['parm_decl', 'unsigned32', 'n'], 'minus_expr', ['integer_cst', '2']]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['parm_decl', 'unsigned32', 'n'], 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['integer_cst', '2'], 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[['parm_decl', 'unsigned32', 'n'], 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[['integer_cst', '2'], 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[['parm_decl', 'unsigned32', 'n'], 'minus_expr', ['integer_cst', '1']]
