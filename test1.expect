function=f1 in test1.cc:1
[['parm_decl', 'int32', 'a'], 'ge_expr', ['integer_cst', '10']]
[[1, 1], 1, [2]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, [1, 1]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, 10, [1, 1]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, 10, [1, 1]]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'minus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 8, 10, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[[1, 1], 7, 8, 10, [2]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[[2], 7, 8, 10, [2]]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'minus_expr', ['integer_cst', '1']]
[[1, 1], 8, 10, [2]]
[['parm_decl', 'int32', 'a'], 'minus_expr', ['integer_cst', '1']]
[[1, 1], 10, [2]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, [1, 1]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, [1, 1]]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, 9, [1, 1]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, 9, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, 9, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 7, 8, 9, [1, 1]]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[2], 7, 8, 9, [1, 1]]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'plus_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 8, 9, [1, 1]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[1, 1], 7, 8, 9, [2]]
[['integer_cst', '10'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[2], 7, 8, 9, [2]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[1, 1], 7, 8, 9, [2]]
[['parm_decl', 'int32', 'a'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[1, 1], 7, 8, 9, [2]]
[['integer_cst', '1'], 'if_stmt', 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[2], 7, 8, 9, [2]]
[['parm_decl', 'int32', 'a'], 'modify_expr', 'plus_expr', ['integer_cst', '1']]
[[1, 1], 8, 9, [2]]
[['parm_decl', 'int32', 'a'], 'plus_expr', ['integer_cst', '1']]
[[1, 1], 9, [2]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 12, 13, [1, 1]]
[['integer_cst', '10'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[2], 12, 13, [1, 1]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 12, 13, [1, 1]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 12, 13, [1, 1]]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[2], 12, 13, [1, 1]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 12, 13, [1, 1]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[1, 1], 12, 13, [1, 1]]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'int32', 'a']]
[[2], 12, 13, [1, 1]]
function=f2 in test1.cc:11
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', ['parm_decl', 'double64', 'g']]
[[1, 2], 8, 9, [1, 2]]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['parm_decl', 'int32', 'a']]
[[1, 2], 8, 9, 14, 15, 4, [1, 1]]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['parm_decl', 'int32', 'a']]
[[1, 2], 9, 14, 15, 4, [1, 1]]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['integer_cst', '0']]
[[1, 2], 8, 9, 14, 15, 4, [2]]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', 'lt_expr', ['integer_cst', '0']]
[[1, 2], 9, 14, 15, 4, [2]]
[['parm_decl', 'int32', 'a'], 'lt_expr', ['integer_cst', '0']]
[[1, 1], 4, [2]]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '-1']]
[[1, 2], 8, 9, 14, 15, [2]]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '-1']]
[[1, 2], 9, 14, 15, [2]]
[['parm_decl', 'int32', 'a'], 'cond_expr', ['integer_cst', '-1']]
[[1, 1], 15, [2]]
[['integer_cst', '0'], 'cond_expr', ['integer_cst', '-1']]
[[2], 15, [2]]
[['parm_decl', 'double64', 'g'], 'modify_expr', 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '1']]
[[1, 2], 8, 9, 14, 15, [2]]
[['parm_decl', 'double64', 'g'], 'plus_expr', 'float_expr', 'cond_expr', ['integer_cst', '1']]
[[1, 2], 9, 14, 15, [2]]
[['parm_decl', 'int32', 'a'], 'cond_expr', ['integer_cst', '1']]
[[1, 1], 15, [2]]
[['integer_cst', '0'], 'cond_expr', ['integer_cst', '1']]
[[2], 15, [2]]
[['integer_cst', '-1'], 'cond_expr', ['integer_cst', '1']]
[[2], 15, [2]]
[['parm_decl', 'double64', 'g'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[1, 2], 12, 13, [1, 2]]
[['parm_decl', 'double64', 'g'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[1, 2], 12, 13, [1, 2]]
[['parm_decl', 'int32', 'a'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[1, 1], 12, 13, [1, 2]]
[['integer_cst', '0'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[2], 12, 13, [1, 2]]
[['integer_cst', '-1'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[2], 12, 13, [1, 2]]
[['integer_cst', '1'], 'statement_list', 'return_expr', ['parm_decl', 'double64', 'g']]
[[2], 12, 13, [1, 2]]
function=fak in test1.cc:19
[['parm_decl', 'unsigned32', 'n'], 'le_expr', ['integer_cst', '1']]
[[1, 3], 3, [2]]
[['parm_decl', 'unsigned32', 'n'], 'if_stmt', 'return_expr', ['integer_cst', '1']]
[[1, 3], 7, 13, [2]]
[['integer_cst', '1'], 'if_stmt', 'return_expr', ['integer_cst', '1']]
[[2], 7, 13, [2]]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[1, 3], 12, 13, 9, 16, 10, [1, 3]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[2], 12, 13, 9, 16, 10, [1, 3]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[2], 12, 13, 9, 16, 10, [1, 3]]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[[1, 3], 12, 13, 9, 16, 10, [2]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[[2], 12, 13, 9, 16, 10, [2]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '2']]
[[2], 12, 13, 9, 16, 10, [2]]
[['parm_decl', 'unsigned32', 'n'], 'minus_expr', ['integer_cst', '2']]
[[1, 3], 10, [2]]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[1, 3], 12, 13, 9, 16, 10, [1, 3]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[2], 12, 13, 9, 16, 10, [1, 3]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[2], 12, 13, 9, 16, 10, [1, 3]]
[['parm_decl', 'unsigned32', 'n'], 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[1, 3], 9, 16, 10, [1, 3]]
[['integer_cst', '2'], 'plus_expr', 'call_expr', 'minus_expr', ['parm_decl', 'unsigned32', 'n']]
[[2], 9, 16, 10, [1, 3]]
[['parm_decl', 'unsigned32', 'n'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[[1, 3], 12, 13, 9, 16, 10, [2]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[[2], 12, 13, 9, 16, 10, [2]]
[['integer_cst', '1'], 'statement_list', 'return_expr', 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[[2], 12, 13, 9, 16, 10, [2]]
[['parm_decl', 'unsigned32', 'n'], 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[[1, 3], 9, 16, 10, [2]]
[['integer_cst', '2'], 'plus_expr', 'call_expr', 'minus_expr', ['integer_cst', '1']]
[[2], 9, 16, 10, [2]]
[['parm_decl', 'unsigned32', 'n'], 'minus_expr', ['integer_cst', '1']]
[[1, 3], 10, [2]]
leafcodes:
  parm_decl=1
  integer_cst=2
typecodes:
  int32=1
  double64=2
  unsigned32=3
nodecodes:
  ge_expr=1
  gt_expr=2
  le_expr=3
  lt_expr=4
  eq_expr=5
  ne_expr=6
  if_stmt=7
  modify_expr=8
  plus_expr=9
  minus_expr=10
  expr_stmt=11
  statement_list=12
  return_expr=13
  float_expr=14
  cond_expr=15
  call_expr=16
